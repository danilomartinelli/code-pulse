name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
  HUSKY: 0
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
      NEXT_PUBLIC_CLERK_SIGN_UP_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
      NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL }}
      NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: ${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
      NEXT_PUBLIC_DOMAIN: ${{ secrets.NEXT_PUBLIC_DOMAIN }}
      NEXT_PUBLIC_SCHEME: ${{ secrets.NEXT_PUBLIC_SCHEME }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      NEXT_PUBLIC_UPLOAD_CARE_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_UPLOAD_CARE_PUBLIC_KEY }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Install Playwright browsers
        run: bunx playwright install --with-deps

      - name: Run Playwright tests with coverage
        run: bunx c8 -o ./coverage --reporter=lcov playwright test

      # TODO: Uncomment the following lines to run accessibility tests and Lighthouse CI
      #
      # - name: Run accessibility tests
      #   run: |
      #     bun add -g pa11y-ci
      #     bunx pa11y-ci
      #
      # - name: Run Lighthouse CI
      #   uses: treosh/lighthouse-ci-action@v9
      #   with:
      #     configPath: './lighthouse-config.json'
      #     uploadArtifacts: true
      #     temporaryPublicStorage: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
